/*
 * CountingGame.java, KanjiCounting, Team Millennium
 * Play the counting activity.
 */
package KanjiCounting;

import java.awt.Font;
import java.io.*;

/**
 *
 * @author e-santry
 */
public class CountingGame extends javax.swing.JFrame {
    
    private Number num; // number from the Number class
    private Font kanji; // Kanji font
    private int[] level; // level gotten from main menu
    private int levelIndex = 0;
    // for audio file names
    private final static String DIR = "/audioFiles/";
    private final static String EXT = ".wav";
    private String tensPlace; // store the 10s place of the number as a string
    private String onesPlace; // store the 1s place of the number as a string
    private WAV clip1; // 1st sound clip
    private WAV clip2; // 2nd sound clip (if necessary)
    private final WAV clip10; // sound clip of ten (juu)

    /**
     * Creates new form CountingGame
     */
    public CountingGame() {
        initComponents();
        getContentPane().setBackground(new java.awt.Color (51,153,255)); // change background color
        
        // import Kanji font
        try
        {
            InputStream fontStream = CountingGame.class.getResourceAsStream("/kanji-font1.ttf");
            Font onePoint = Font.createFont(Font.TRUETYPE_FONT, fontStream);
            fontStream.close();
            kanji = onePoint.deriveFont(Font.PLAIN, 180);
        }
        catch (Exception e) {}
        kanjiNumLabel.setFont(kanji);
        
        clip10 = new WAV (DIR + "10" + EXT); // initialize the audio file for 10
        
        setVisible(true); // this is used to display the JFrame
        
    }
    
    /**
     * Generates number based on level retrieved from main menu.
     * @param level 
     */
    public void CountingGame(int level[]) {
        this.level = level; // get level from main menu
        num = new Number(this.level[levelIndex]); // generate random number based on level
        arabicNumLabel.setText(num.getNumberA() + ""); // set Arabic numeral
        kanjiNumLabel.setText(num.getNumberK()); // set Kanji number
        kanjiNumSpelling.setText(num.getKanjiWord()); // set Romanized spelling of Kanji
    }
    
    /**
     * Plays sound of the number being shown.
     */
    public void sound()
    {
        String numString = Integer.toString(num.getNumberA());
        if (num.getNumberA() <= 10 || num.getNumberA() == 100) // if number is 1-10 or 100
        {
            clip1 = new WAV (DIR + numString + EXT);
            clip1.play();
        }
        else if (num.getNumberA() % 10 == 0) // if number is a multiple of 10
        {
            // pronounce number juu + number in 10s place
            tensPlace = Integer.toString(num.getNumberA() / 10);
            clip1 = new WAV (DIR + tensPlace + EXT);
            clip1.play();
            try {
                Thread.sleep(500); // wait .5 sec so the audio clips don't play over each other
            } catch (InterruptedException ex) {} // make compiler happy
            clip10.play();
        }
        else if (num.getNumberA() > 10 && num.getNumberA() < 20) // if number is a teen
        {
            // pronounce number number in 1s place + juu
            onesPlace = Integer.toString(num.getNumberA() % 10);
            clip1 = new WAV (DIR + onesPlace + EXT);
            clip10.play();
            try {
                Thread.sleep(500);
            } catch (InterruptedException ex) {} // make compiler happy
            clip1.play();
        }
        else // all other numbers like 21, 42, 97, etc.
        {
            // pronounce number number in 10s place + juu + number in 1s place
            tensPlace = Integer.toString(num.getNumberA() / 10);
            onesPlace = Integer.toString(num.getNumberA() % 10);
            clip1 = new WAV (DIR + tensPlace + EXT);
            clip2 = new WAV (DIR + onesPlace + EXT);
            clip1.play();
            try {
                Thread.sleep(500);
            } catch (InterruptedException ex) {} // make compiler happy
            clip10.play();
            try {
                Thread.sleep(500);
            } catch (InterruptedException ex) {} // make compiler happy
            clip2.play();
        }
        
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        arabicNumLabel = new javax.swing.JLabel();
        kanjiNumLabel = new javax.swing.JLabel();
        kanjiNumSpelling = new javax.swing.JLabel();
        nextButton = new javax.swing.JButton();
        previousButton = new javax.swing.JButton();
        hearButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(493, 600));
        setMinimumSize(new java.awt.Dimension(493, 600));
        setPreferredSize(new java.awt.Dimension(493, 600));
        setSize(new java.awt.Dimension(493, 600));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        arabicNumLabel.setFont(new java.awt.Font("Tahoma", 0, 200)); // NOI18N
        getContentPane().add(arabicNumLabel);
        arabicNumLabel.setBounds(30, 10, 350, 190);
        getContentPane().add(kanjiNumLabel);
        kanjiNumLabel.setBounds(10, 160, 550, 310);

        kanjiNumSpelling.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        kanjiNumSpelling.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(kanjiNumSpelling);
        kanjiNumSpelling.setBounds(130, 480, 179, 55);

        nextButton.setText("Next");
        nextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextButtonActionPerformed(evt);
            }
        });
        getContentPane().add(nextButton);
        nextButton.setBounds(150, 540, 55, 23);

        previousButton.setText("Previous");
        previousButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previousButtonActionPerformed(evt);
            }
        });
        getContentPane().add(previousButton);
        previousButton.setBounds(30, 540, 90, 23);

        hearButton.setText("Hear again");
        hearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hearButtonActionPerformed(evt);
            }
        });
        getContentPane().add(hearButton);
        hearButton.setBounds(30, 500, 110, 23);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        
    }//GEN-LAST:event_formWindowOpened

    private void previousButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previousButtonActionPerformed
        // show previous number
        levelIndex--;
        if (levelIndex == -1) levelIndex = level.length - 1;
        num.Number(level[levelIndex]);
        arabicNumLabel.setText(num.getNumberA() + "");
        kanjiNumLabel.setText(num.getNumberK());
        kanjiNumSpelling.setText(num.getKanjiWord());
        sound();
    }//GEN-LAST:event_previousButtonActionPerformed

    private void nextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextButtonActionPerformed
        // show next number
        levelIndex++;
        if (levelIndex == level.length) levelIndex = 0;
        num.Number(level[levelIndex]);
        arabicNumLabel.setText(num.getNumberA() + "");
        kanjiNumLabel.setText(num.getNumberK());
        kanjiNumSpelling.setText(num.getKanjiWord());
        sound();
    }//GEN-LAST:event_nextButtonActionPerformed

    private void hearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hearButtonActionPerformed
        // play sound
        sound();
    }//GEN-LAST:event_hearButtonActionPerformed

    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CountingGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CountingGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CountingGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CountingGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CountingGame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel arabicNumLabel;
    private javax.swing.JButton hearButton;
    private javax.swing.JLabel kanjiNumLabel;
    private javax.swing.JLabel kanjiNumSpelling;
    private javax.swing.JButton nextButton;
    private javax.swing.JButton previousButton;
    // End of variables declaration//GEN-END:variables
}
